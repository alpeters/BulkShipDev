---
title: "ML FC Exploration"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(kableExtra)
```

Plotting defaults

```{r}
imagepath = "plots"
tablepath = "tables"
mltrackeddatapath = "tracked_data"
trackeddatapath = "../src/tracked_data"
fileprefix = "ML_FC_Exploration_"
# update_geom_defaults("text", list(size = 20))
base_size <- 18
theme_set(theme_minimal(base_size = base_size))
theme_pres <- function(base_size){
  theme_get() %+replace%
    theme(axis.ticks = element_line(colour = "grey70", linewidth = rel(0.5)),
          panel.grid = element_blank(),
          panel.grid.major.y = element_line(colour = 'grey90', linewidth = rel(0.5)),
          # panel.border = element_rect(fill = NA, colour = "grey30", linewidth = rel(0.8)),
          strip.text = element_text(size=1.03*base_size),
          legend.text = element_text(size=1.1*base_size))
}
pres_palette <- c("#482677FF", "#1D7C5A", "#A64902", "#e7298a")
```

# Load data

```{r}
train_df <- read_csv('../src/tracked_data/df_ml_rel_train.csv',
                          show_col_types = FALSE)
```

# Features

```{r}
train_df |> 
  colnames() |> 
  as_tibble() |> 
  rename('variable' = 'value') |> 
  write_csv(file.path(tablepath, paste0(fileprefix, "all_feature_names.csv")))
```

## Manually create feature descriptions in csv, then load

```{r}
features_all_desc <- read_csv(file.path(tablepath, paste0(fileprefix, 'all_feature_names_desc.csv')))
```

```{r}
features_all_desc
```

## Create latex table for a given feature set

```{r}
set <- 'm5dd_nofilter'
features_set_desc <- paste0(str_remove(fileprefix, '_Exploration'), 'F', set, '_features.csv') %>%
  file.path(mltrackeddatapath, .) |> 
  read_csv(show_col_types = FALSE) |> 
  left_join(features_all_desc, by = 'variable') |> 
  mutate(group = factor(group, 
                        ordered = TRUE, 
                        levels = c('characteristic', 'activity', 'calc', 'quality'),
                        labels = c('Ship Characteristics', 'Ship Activity', 'Calculated', 'Data Quality'))) |> 
  arrange(group, name)

undefined <- features_set_desc |> 
  filter(is.na(name)) |> 
  pull(variable)

if(length(undefined) > 0){
  warning(paste('The following variables have no description:',
                paste(undefined, collapse = ', ')))
}

index_df <- features_set_desc |> 
  count(group)

index <- index_df$n
names(index) <- index_df$group

# features_set_desc_table <- 
features_set_desc |> 
  mutate(unit = ifelse(is.na(unit),
                            unit,
                            paste0('(', unit, ')'))) |> 
  mutate(across(everything(), \(x) replace_na(x, ''))) |> 
  mutate(table.desc = ifelse(type == 'derived',
                             paste0(description, ', calculated as ', definition),
                             paste(description, unit))) |> 
  mutate(name = str_to_title(name),
         name = str_replace_all(name, 'Ais', 'AIS'),
         name = str_replace_all(name, 'Acs', 'acs'),
         name = str_replace_all(name, 'Fc', 'FC')) |> 
         # table.desc = str_to_sentence(table.desc)) |>
  select(Variable = name, Description = table.desc) |> 
  kbl(digits = 0,
      format = 'latex',
      escape = FALSE,
      booktabs = TRUE) |>
  column_spec(1, width = "16em") |>
  column_spec(2, width = "30em") |> 
  pack_rows(index = index) |> 
  # kable_paper(c("striped")) |>
  save_kable(file.path(tablepath, paste0(fileprefix, 'features_', set, ".tex")),
             float = FALSE)

# features_set_desc_table
```

```{r}
test <- read_csv('../src/tracked_data/df_ml_rel_train.csv',
                          show_col_types = FALSE) 
```

```{r}
test |> select(Name, Dwt, HP.Total.Propulsion, ME_W_ref_first) |> 
  mutate(test = HP.Total.Propulsion/ME_W_ref_first) |> 
  arrange(desc(test))
```

# Plot raw data

```{r}
library(showtext)
showtext_auto()

train_df |> 
  ggplot(aes(x = log_report_fc, y = log_cal_fc)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0) +
  geom_smooth(method = 'lm') +
  theme_minimal(base_family = 'sans')
  # theme(panel.grid = element_blank())
ggsave('test.png', device = 'png', width = 4, height = 2)
```
